/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentUpdateManyWithoutArticlesInput } from "./CommentUpdateManyWithoutArticlesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { TagUpdateManyWithoutArticlesInput } from "./TagUpdateManyWithoutArticlesInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class ArticleUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutArticlesInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutArticlesInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutArticlesInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutArticlesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  content?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  published?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => TagUpdateManyWithoutArticlesInput,
  })
  @ValidateNested()
  @Type(() => TagUpdateManyWithoutArticlesInput)
  @IsOptional()
  @Field(() => TagUpdateManyWithoutArticlesInput, {
    nullable: true,
  })
  tags?: TagUpdateManyWithoutArticlesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tagsAssociation?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { ArticleUpdateInput as ArticleUpdateInput };
