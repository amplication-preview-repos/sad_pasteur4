datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Article {
  comments        Comment[]
  content         String?
  createdAt       DateTime  @default(now())
  id              String    @id @default(cuid())
  published       Boolean?
  tags            Tag[]
  tagsAssociation String?
  title           String?
  updatedAt       DateTime  @updatedAt
  user            User?     @relation(fields: [userId], references: [id])
  userId          String?
}

model Comment {
  article   Article?           @relation(fields: [articleId], references: [id])
  articleId String?
  content   String?
  createdAt DateTime           @default(now())
  id        String             @id @default(cuid())
  status    EnumCommentStatus?
  updatedAt DateTime           @updatedAt
  user      User?              @relation(fields: [userId], references: [id])
  userId    String?
}

model Tag {
  article             Article? @relation(fields: [articleId], references: [id])
  articleId           String?
  articlesAssociation String?
  createdAt           DateTime @default(now())
  id                  String   @id @default(cuid())
  name                String?
  updatedAt           DateTime @updatedAt
}

model User {
  articles  Article[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  email     String?   @unique
  firstName String?
  id        String    @id @default(cuid())
  lastName  String?
  nickname  String?
  password  String
  profile   String?
  role      Role?     @relation(fields: [roleId], references: [id])
  roleId    String?
  roles     Json
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

model Role {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  updatedAt   DateTime @updatedAt
  users       User[]
}

enum EnumCommentStatus {
  Option1
}
